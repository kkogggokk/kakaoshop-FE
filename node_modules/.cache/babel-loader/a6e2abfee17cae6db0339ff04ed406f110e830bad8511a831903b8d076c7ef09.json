{"ast":null,"code":"// 이메일, 비밀번호 유효성 검사\n// 이메일 : 이메일 형식으로 작성\n// 비밀번호 : 8-20자\nconst emailRegEx=new RegExp(\"^[A-Za-z0-9-_.]+@([A-Za-z0-9-_.]+.)+[A-Za-z0-9_]{2,4}$\");const passwordRegEx=new RegExp(\"^(?=.*[A-Za-z])(?=.*[0-9])(?=.*[@$!%*#?&])[A-Za-z0-9@$!%*#?&]{8,20}$\");export const emailValidCheck=email=>{return emailRegEx.test(email);};export const pwValidCheck=pw=>{return passwordRegEx.test(pw);};","map":{"version":3,"names":["emailRegEx","RegExp","passwordRegEx","emailValidCheck","email","test","pwValidCheck","pw"],"sources":["/Users/master/Desktop/coupon-project/kakaoshop-FE/src/utils/validationCheck.jsx"],"sourcesContent":["// 이메일, 비밀번호 유효성 검사\n// 이메일 : 이메일 형식으로 작성\n// 비밀번호 : 8-20자\nconst emailRegEx = new RegExp(\n  \"^[A-Za-z0-9-_.]+@([A-Za-z0-9-_.]+.)+[A-Za-z0-9_]{2,4}$\"\n);\nconst passwordRegEx = new RegExp(\n  \"^(?=.*[A-Za-z])(?=.*[0-9])(?=.*[@$!%*#?&])[A-Za-z0-9@$!%*#?&]{8,20}$\"\n);\n\nexport const emailValidCheck = (email) => {\n  return emailRegEx.test(email);\n};\nexport const pwValidCheck = (pw) => {\n  return passwordRegEx.test(pw);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,KAAM,CAAAA,UAAU,CAAG,GAAI,CAAAC,MAAM,CAC3B,wDACF,CAAC,CACD,KAAM,CAAAC,aAAa,CAAG,GAAI,CAAAD,MAAM,CAC9B,sEACF,CAAC,CAED,MAAO,MAAM,CAAAE,eAAe,CAAIC,KAAK,EAAK,CACxC,MAAO,CAAAJ,UAAU,CAACK,IAAI,CAACD,KAAK,CAAC,CAC/B,CAAC,CACD,MAAO,MAAM,CAAAE,YAAY,CAAIC,EAAE,EAAK,CAClC,MAAO,CAAAL,aAAa,CAACG,IAAI,CAACE,EAAE,CAAC,CAC/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}