{"ast":null,"code":"import{useState}from\"react\";import OptionList from\"../atoms/OptionList\";import{comma}from\"../../utils/convert\";import Counter from\"../atoms/Counter\";import{useMutation}from\"react-query\";import{addCart}from\"../../services/api/cart\";import Button from\"../atoms/Button\";import{BsCart2,BsFillHeartFill,BsXLg}from\"react-icons/bs\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const staticServerUri=process.env.REACT_APP_PATH||\"\";const OptionColumn=_ref=>{let{product}=_ref;const[selectedOptions,setSelectedOptions]=useState([]);const handleOnClickOption=option=>{// 동일한 옵션 클릭을 방지해 주는 코드(이미 선택된 옵션인지 확인)\n// Array의 find 메소드 이용, 찾았을 때 : 엘리먼트를 리턴, 찾지 못했을 때 : undefined 리턴\nconst isOptionSelected=selectedOptions.find(el=>{return el.optionId===option.id;});// 이미 선택된 옵션이면 수량을 증가시킨다. => 코드를 간편하게 하기위해 강의에서는 아무 일도 일어나지 않도록 처리\nif(isOptionSelected){// selectedOptions((prev) => {\n//   prev.map((el) => {\n//     el.optionId === option.id ? {\n//       ...el, quantity: el.quantity + 1\n//     } : el\n//   })\n// })\nreturn;}setSelectedOptions(prev=>{return[...prev,{optionId:option.id,quantity:1,price:option.price,name:option.optionName}];});};const handleOnChange=(count,optionId)=>{setSelectedOptions(prev=>{return prev.map(el=>{if(el.optionId===optionId){return{...el,quantity:count};}return el;});});};const handleDeleteOption=targetId=>{setSelectedOptions(prev=>prev.filter(el=>el.optionId!==targetId));};/* 장바구니 담기 api 처리\n  리액트 쿼리에서 get 메소드는 useQuery를 이용하여 요청, 관리했다.\n  post 메소드는 useMutation을 이용하여 관리한다.\n  mutation : 돌연변이, 기존의 상태를 변경한다는 의미\n  */ /* useMutaion의 mutationFn으로 addCart 함수를 바인딩 했는데\n  addCart 함수는 매개변수를 필요로 한다. => 그럼 어떻게 사용해야 하지?\n  const {mutate} = useMutaion처럼 mutate에 useMutation을 받아주고\n  mutate({ optionId: 1, quantity: 1}) 처럼 사용한다. */const{mutate}=useMutation({mutationFn:addCart});const route=useNavigate();return/*#__PURE__*/_jsxs(\"div\",{className:\"flex-none sticky top-20 pt-8 pl-8 pb-8 w-[380px] h-fit\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"overflow-y-auto max-h-[420px] mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"pl-1 pb-2 font-semibold\",children:\"\\uC635\\uC158\\uC120\\uD0DD\"}),/*#__PURE__*/_jsx(OptionList,{options:product.options// 사용자가 선택한 option\n,onClick:// 장바구니 담기 api\n// optionId, quantity\nhandleOnClickOption}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"ol\",{className:\"selected-option-list\",children:selectedOptions.map(option=>{return/*#__PURE__*/_jsxs(\"li\",{className:\"bg-neutral-100 mt-[10px] p-5\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:option.name}),/*#__PURE__*/_jsx(\"button\",{className:\"float-right border bg-white w-6 h-6 items-center\",onClick:()=>handleDeleteOption(option.optionId),children:/*#__PURE__*/_jsx(BsXLg,{className:\"m-auto\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center pt-3\",children:[/*#__PURE__*/_jsx(Counter,{value:option.quantity/*Counter에 onDec, Inc의 props로 함수를 전달하였으므로\n              onDec, Inc에서 이용되는 count는 Counter의 handleOnDec, Inc에서 실행된 \n              count -1, count +1의 값이 여기에서 count로 이용된다. */,onDecrease:count=>handleOnChange(count,option.optionId),onIncrease:count=>handleOnChange(count,option.optionId)// 위의 두 줄의 코드를 아래 처럼 한 줄의 코드로 바꿔줘도 된다.\n// 그렇게 하려면 Counter에서 props의 추가적인 수정이 필요하겠지만\n// onChange={(count) => handleOnChange(count, option.id)}\n}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:comma(option.price)})]})]},option.optionId);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-b border-neutral-200\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"float-left w-[70px]\",children:/*#__PURE__*/_jsx(\"strong\",{className:\"text-sm\",children:\"\\uBC30\\uC1A1\\uBC29\\uBC95\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"item_cont\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\" \\uD0DD\\uBC30\\uBC30\\uC1A1 \"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1 mb-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"float-left w-[70px]\",children:/*#__PURE__*/_jsx(\"strong\",{className:\"text-sm\",children:\"\\uBC30\\uC1A1\\uBE44\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"item_cont\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\" \\uBB34\\uB8CC \"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-price py-5\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-lg\",children:[\"\\uCD1D \\uC218\\uB7C9\",\" \",comma(selectedOptions.reduce((acc,cur)=>{// acc : 이전 값\n// cur : 현재 선택된 엘리먼트\nreturn acc+cur.quantity;},0)),\"\\uAC1C\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"float-right text-lg\",children:[\"\\uCD1D \\uC8FC\\uBB38\\uAE08\\uC561\",\" \",/*#__PURE__*/_jsx(\"span\",{className:\"text-xl font-semibold text-red-500 px-1\",children:comma(selectedOptions.reduce((acc,cur)=>{return acc+cur.quantity*cur.price;},0))}),\"\\uC6D0\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-group flex justify-around\",children:[/*#__PURE__*/_jsx(Button,{className:\"w-14 h-14 rounded bg-rose-500 flex items-center justify-center\",onClick:()=>{},children:/*#__PURE__*/_jsx(BsFillHeartFill,{className:\"text-2xl text-white\"})}),/*#__PURE__*/_jsx(Button,{className:\"w-14 h-14 rounded bg-black flex items-center justify-center\",onClick:()=>{if(selectedOptions.length===0){alert(\"선택된 옵션이 없습니다.\");return;}mutate(selectedOptions.map(el=>{return{optionId:el.optionId,quantity:el.quantity};}),{onSuccess:()=>{alert(\"장바구니에 담겼습니다.\");},onError:error=>{if(error.status===401)alert(\"로그인이 필요합니다.\");else alert(`${error===null||error===void 0?void 0:error.message}\\n장바구니 담기에 실패했습니다.`);}});},children:/*#__PURE__*/_jsx(BsCart2,{className:\"text-2xl text-white\"})}),/*#__PURE__*/_jsx(Button,{className:\"w-48 h-14 rounded bg-[#FFEB00] hover:bg-yellow-400\",onClick:()=>{if(selectedOptions.length===0){alert(\"선택된 옵션이 없습니다.\");return;}// mutate(selectedOptions)\n/* 위의 코드처럼 바로 전달해 주면 안된다. \n          api에서는 id와 quantity만을 필요로 하는데, \n          selectedOption에는 price, name과 같은 정보들이 추가적으로 담겨있기 때문 */ /* 또한 mutate내에서 콜백을 관리할 수 있다.\n          두 번째 매개변수로, 옵션을 지정하여 이용 */mutate(selectedOptions.map(el=>{return{optionId:el.optionId,quantity:el.quantity};}),{onSuccess:()=>{route(staticServerUri+\"/order\");//장바구니에 담은 후 주문 페이지로 이동\n},onError:error=>{if(error.status===401)alert(\"로그인이 필요합니다.\");else{alert(`요청에 실패했습니다.`);console.log(error===null||error===void 0?void 0:error.message);}}});},children:\"\\uAD6C\\uB9E4\\uD558\\uAE30\"})]})]});};export default OptionColumn;","map":{"version":3,"names":["useState","OptionList","comma","Counter","useMutation","addCart","Button","BsCart2","BsFillHeartFill","BsXLg","useNavigate","jsx","_jsx","jsxs","_jsxs","staticServerUri","process","env","REACT_APP_PATH","OptionColumn","_ref","product","selectedOptions","setSelectedOptions","handleOnClickOption","option","isOptionSelected","find","el","optionId","id","prev","quantity","price","name","optionName","handleOnChange","count","map","handleDeleteOption","targetId","filter","mutate","mutationFn","route","className","children","options","onClick","value","onDecrease","onIncrease","reduce","acc","cur","length","alert","onSuccess","onError","error","status","message","console","log"],"sources":["/Users/master/Desktop/coupon-project/kakaoshop-FE/src/components/molecules/OptionColumn.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport OptionList from \"../atoms/OptionList\";\nimport { comma } from \"../../utils/convert\";\nimport Counter from \"../atoms/Counter\";\nimport { useMutation } from \"react-query\";\nimport { addCart } from \"../../services/api/cart\";\nimport Button from \"../atoms/Button\";\nimport { BsCart2, BsFillHeartFill, BsXLg } from \"react-icons/bs\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst staticServerUri = process.env.REACT_APP_PATH || \"\";\n\nconst OptionColumn = ({ product }) => {\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const handleOnClickOption = (option) => {\n    // 동일한 옵션 클릭을 방지해 주는 코드(이미 선택된 옵션인지 확인)\n    // Array의 find 메소드 이용, 찾았을 때 : 엘리먼트를 리턴, 찾지 못했을 때 : undefined 리턴\n    const isOptionSelected = selectedOptions.find((el) => {\n      return el.optionId === option.id;\n    });\n    // 이미 선택된 옵션이면 수량을 증가시킨다. => 코드를 간편하게 하기위해 강의에서는 아무 일도 일어나지 않도록 처리\n    if (isOptionSelected) {\n      // selectedOptions((prev) => {\n      //   prev.map((el) => {\n      //     el.optionId === option.id ? {\n      //       ...el, quantity: el.quantity + 1\n      //     } : el\n      //   })\n      // })\n      return;\n    }\n\n    setSelectedOptions((prev) => {\n      return [\n        ...prev,\n        {\n          optionId: option.id,\n          quantity: 1,\n          price: option.price,\n          name: option.optionName,\n        },\n      ];\n    });\n  };\n  const handleOnChange = (count, optionId) => {\n    setSelectedOptions((prev) => {\n      return prev.map((el) => {\n        if (el.optionId === optionId) {\n          return {\n            ...el,\n            quantity: count,\n          };\n        }\n        return el;\n      });\n    });\n  };\n\n  const handleDeleteOption = (targetId) => {\n    setSelectedOptions((prev) => prev.filter((el) => el.optionId !== targetId));\n  };\n\n  /* 장바구니 담기 api 처리\n  리액트 쿼리에서 get 메소드는 useQuery를 이용하여 요청, 관리했다.\n  post 메소드는 useMutation을 이용하여 관리한다.\n  mutation : 돌연변이, 기존의 상태를 변경한다는 의미\n  */\n  /* useMutaion의 mutationFn으로 addCart 함수를 바인딩 했는데\n  addCart 함수는 매개변수를 필요로 한다. => 그럼 어떻게 사용해야 하지?\n  const {mutate} = useMutaion처럼 mutate에 useMutation을 받아주고\n  mutate({ optionId: 1, quantity: 1}) 처럼 사용한다. */\n  const { mutate } = useMutation({\n    mutationFn: addCart,\n  });\n\n  const route = useNavigate();\n\n  return (\n    <div className=\"flex-none sticky top-20 pt-8 pl-8 pb-8 w-[380px] h-fit\">\n      <div className=\"overflow-y-auto max-h-[420px] mb-4\">\n        <h3 className=\"pl-1 pb-2 font-semibold\">옵션선택</h3>\n        {/* 옵션 담기를 할 수 있는 영역 */}\n        <OptionList\n          options={product.options}\n          // 사용자가 선택한 option\n          onClick={\n            // 장바구니 담기 api\n            // optionId, quantity\n            handleOnClickOption\n          }\n        />\n        <hr />\n        {/* 담긴 옵션이 표기 */}\n        {/* ui에서 필요한 정보: 옵션의 이름, 가격, 수량, 총 가격 */}\n        <ol className=\"selected-option-list\">\n          {selectedOptions.map((option) => {\n            return (\n              <li\n                key={option.optionId}\n                className=\"bg-neutral-100 mt-[10px] p-5\"\n              >\n                <span className=\"text-sm\">{option.name}</span>\n                <button\n                  className=\"float-right border bg-white w-6 h-6 items-center\"\n                  onClick={() => handleDeleteOption(option.optionId)}\n                >\n                  <BsXLg className=\"m-auto\" />\n                </button>\n                <div className=\"flex justify-between items-center pt-3\">\n                  <Counter\n                    value={option.quantity}\n                    /*Counter에 onDec, Inc의 props로 함수를 전달하였으므로\n              onDec, Inc에서 이용되는 count는 Counter의 handleOnDec, Inc에서 실행된 \n              count -1, count +1의 값이 여기에서 count로 이용된다. */\n                    onDecrease={(count) =>\n                      handleOnChange(count, option.optionId)\n                    }\n                    onIncrease={(count) =>\n                      handleOnChange(count, option.optionId)\n                    }\n                    // 위의 두 줄의 코드를 아래 처럼 한 줄의 코드로 바꿔줘도 된다.\n                    // 그렇게 하려면 Counter에서 props의 추가적인 수정이 필요하겠지만\n                    // onChange={(count) => handleOnChange(count, option.id)}\n                  />\n                  <span className=\"text-sm\">{comma(option.price)}</span>\n                </div>\n              </li>\n            );\n          })}\n        </ol>\n      </div>\n      <div className=\"border-b border-neutral-200\">\n        <div>\n          <div className=\"float-left w-[70px]\">\n            <strong className=\"text-sm\">배송방법</strong>\n          </div>\n          <div className=\"item_cont\">\n            <span className=\"text-sm\"> 택배배송 </span>\n          </div>\n        </div>\n        <div className=\"mt-1 mb-3\">\n          <div className=\"float-left w-[70px]\">\n            <strong className=\"text-sm\">배송비</strong>\n          </div>\n          <div className=\"item_cont\">\n            <span className=\"text-sm\"> 무료 </span>\n          </div>\n        </div>\n      </div>\n      <div className=\"total-price py-5\">\n        <span className=\"text-lg\">\n          총 수량{\" \"}\n          {comma(\n            selectedOptions.reduce((acc, cur) => {\n              // acc : 이전 값\n              // cur : 현재 선택된 엘리먼트\n              return acc + cur.quantity;\n            }, 0)\n          )}\n          개\n        </span>\n        <span className=\"float-right text-lg\">\n          총 주문금액{\" \"}\n          <span className=\"text-xl font-semibold text-red-500 px-1\">\n            {comma(\n              selectedOptions.reduce((acc, cur) => {\n                return acc + cur.quantity * cur.price;\n              }, 0)\n            )}\n          </span>\n          원\n        </span>\n      </div>\n      <div className=\"button-group flex justify-around\">\n        <Button\n          className=\"w-14 h-14 rounded bg-rose-500 flex items-center justify-center\"\n          onClick={() => {}}\n        >\n          <BsFillHeartFill className=\"text-2xl text-white\" />\n        </Button>\n        <Button\n          className=\"w-14 h-14 rounded bg-black flex items-center justify-center\"\n          onClick={() => {\n            if (selectedOptions.length === 0) {\n              alert(\"선택된 옵션이 없습니다.\");\n              return;\n            }\n            mutate(\n              selectedOptions.map((el) => {\n                return {\n                  optionId: el.optionId,\n                  quantity: el.quantity,\n                };\n              }),\n              {\n                onSuccess: () => {\n                  alert(\"장바구니에 담겼습니다.\");\n                },\n                onError: (error) => {\n                  if (error.status === 401) alert(\"로그인이 필요합니다.\");\n                  else\n                    alert(`${error?.message}\\n장바구니 담기에 실패했습니다.`);\n                },\n              }\n            );\n          }}\n        >\n          <BsCart2 className=\"text-2xl text-white\" />\n        </Button>\n        <Button\n          className=\"w-48 h-14 rounded bg-[#FFEB00] hover:bg-yellow-400\"\n          onClick={() => {\n            if (selectedOptions.length === 0) {\n              alert(\"선택된 옵션이 없습니다.\");\n              return;\n            }\n\n            // mutate(selectedOptions)\n            /* 위의 코드처럼 바로 전달해 주면 안된다. \n          api에서는 id와 quantity만을 필요로 하는데, \n          selectedOption에는 price, name과 같은 정보들이 추가적으로 담겨있기 때문 */\n            /* 또한 mutate내에서 콜백을 관리할 수 있다.\n          두 번째 매개변수로, 옵션을 지정하여 이용 */\n            mutate(\n              selectedOptions.map((el) => {\n                return {\n                  optionId: el.optionId,\n                  quantity: el.quantity,\n                };\n              }),\n              {\n                onSuccess: () => {\n                  route(staticServerUri + \"/order\"); //장바구니에 담은 후 주문 페이지로 이동\n                },\n                onError: (error) => {\n                  if (error.status === 401) alert(\"로그인이 필요합니다.\");\n                  else {\n                    alert(`요청에 실패했습니다.`);\n                    console.log(error?.message);\n                  }\n                },\n              }\n            );\n          }}\n        >\n          구매하기\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default OptionColumn;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}