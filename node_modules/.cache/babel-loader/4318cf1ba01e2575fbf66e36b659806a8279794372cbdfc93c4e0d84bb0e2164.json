{"ast":null,"code":"import{instance}from\"./index\";// 백엔드 요청 작성\n// 1. register 요청\nexport const register=data=>{// data 대신 {email, password, username} 처럼 데이처 입력에서 필터링 할 수도 있다. 근데 이번엔 이렇게 진행한대\nconst{email,password,username}=data;// data에서 email, username을 받아서 아무 데이터나(객체에 들어있는 email, username처럼 지정되지 않은) api 요청이 될 수 없도록 처리\nreturn instance.post(\"/join\",{email,password,username});};// 2. login 요청\nexport const login=data=>{const{email,password}=data;return instance.post(\"/login\",{email,password});};","map":{"version":3,"names":["instance","register","data","email","password","username","post","login"],"sources":["/Users/master/Desktop/coupon-project/kakaoshop-FE/src/services/api/user.js"],"sourcesContent":["import {instance} from \"./index\"\n\n// 백엔드 요청 작성\n// 1. register 요청\nexport const register = (data) => { // data 대신 {email, password, username} 처럼 데이처 입력에서 필터링 할 수도 있다. 근데 이번엔 이렇게 진행한대\n  const { email, password, username } = data; // data에서 email, username을 받아서 아무 데이터나(객체에 들어있는 email, username처럼 지정되지 않은) api 요청이 될 수 없도록 처리\n  return instance.post(\"/join\", {\n    email,\n    password,\n    username,\n  });\n}\n\n// 2. login 요청\nexport const login = (data) => { \n  const { email, password } = data;\n  return instance.post(\"/login\", {\n    email,\n    password,\n  });\n}"],"mappings":"AAAA,OAAQA,QAAQ,KAAO,SAAS,CAEhC;AACA;AACA,MAAO,MAAM,CAAAC,QAAQ,CAAIC,IAAI,EAAK,CAAE;AAClC,KAAM,CAAEC,KAAK,CAAEC,QAAQ,CAAEC,QAAS,CAAC,CAAGH,IAAI,CAAE;AAC5C,MAAO,CAAAF,QAAQ,CAACM,IAAI,CAAC,OAAO,CAAE,CAC5BH,KAAK,CACLC,QAAQ,CACRC,QACF,CAAC,CAAC,CACJ,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,KAAK,CAAIL,IAAI,EAAK,CAC7B,KAAM,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAGF,IAAI,CAChC,MAAO,CAAAF,QAAQ,CAACM,IAAI,CAAC,QAAQ,CAAE,CAC7BH,KAAK,CACLC,QACF,CAAC,CAAC,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}