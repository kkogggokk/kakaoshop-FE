{"ast":null,"code":"import{useEffect,useState,useCallback,useRef}from\"react\";import CartItem from\"../atoms/CartItem\";import{comma}from\"../../utils/convert\";import Button from\"../atoms/Button\";import{useNavigate}from\"react-router-dom\";import{useMutation}from\"react-query\";import Box from\"../atoms/Box\";import Container from\"../atoms/Container\";import{updateCart}from\"../../services/api/cart\";import{BsCart}from\"react-icons/bs\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const staticServerUri=process.env.REACT_APP_PATH||\"\";const CartList=_ref=>{let{data,isLoading}=_ref;const route=useNavigate();const[cartItems,setCartItems]=useState([]);const[totalPrice,setTotalPrice]=useState(0);const[isCartEmpty,setIsCartEmpty]=useState(false);const updatePayload=useRef([]);const{mutate}=useMutation({mutationFn:updateCart});const getTotalCartCountIncludeOptions=useCallback(()=>{let count=0;cartItems.forEach(item=>{item.carts.forEach(cart=>{count+=cart.quantity;// 개별 옵션에 해당\n});});return comma(count);},[cartItems]);const getIsCartEmpty=useCallback(()=>{return cartItems.every(product=>{return product.carts.every(option=>option.quantity===0);});},[cartItems]);useEffect(()=>{var _data$data,_data$data$response,_data$data2,_data$data2$response;if((data===null||data===void 0?void 0:(_data$data=data.data)===null||_data$data===void 0?void 0:(_data$data$response=_data$data.response)===null||_data$data$response===void 0?void 0:_data$data$response.products)!==undefined){setCartItems(data.data.response.products);}if((data===null||data===void 0?void 0:(_data$data2=data.data)===null||_data$data2===void 0?void 0:(_data$data2$response=_data$data2.response)===null||_data$data2$response===void 0?void 0:_data$data2$response.totalPrice)!==undefined){setTotalPrice(data.data.response.totalPrice);}setIsCartEmpty(getIsCartEmpty());},[data,getIsCartEmpty]);useEffect(()=>{setIsCartEmpty(getIsCartEmpty());},[cartItems,getIsCartEmpty]);/**\n   * 옵션의 수량 변경과 가격 변경을 관리\n   * @param {number} optionId : 옵션의 아이디\n   * @param {number} quantity : 옵션 수량\n   * @param {number} price : 옵션 가격\n   */const handleOnChangeCount=(optionId,quantity,price)=>{const prev=updatePayload.current;const isExist=prev.find(item=>item.cartId===optionId);if(isExist){updatePayload.current=[...prev.filter(item=>item.cartId!==optionId),{cartId:optionId,quantity}];}else{updatePayload.current=[...prev,{cartId:optionId,quantity}];}mutate(updatePayload.current,{onSuccess:data=>{setTotalPrice(prev=>prev+price);setCartItems(prev=>prev.map(item=>({...item,carts:item.carts.map(cart=>{if(cart.id===optionId){return{...cart,quantity};}return cart;})})));},onError:error=>{alert(error.message);}});};return/*#__PURE__*/_jsx(\"main\",{className:\"pt-2 pb-10 bg-[#F4F4F4] bg-opacity-70\",children:/*#__PURE__*/_jsxs(Container,{className:\"w-[870px] mx-auto\",children:[/*#__PURE__*/_jsx(Box,{className:\"h-12 border rounded bg-white text-center\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"font-semibold text-[15px] mt-3\",children:\"\\uC7A5\\uBC14\\uAD6C\\uB2C8\"})}),isCartEmpty?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center pt-52 pb-80 mt-2 border rounded bg-white \",children:[/*#__PURE__*/_jsx(BsCart,{className:\"mx-auto my-4 text-5xl text-neutral-300\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xl\",children:\"\\uC7A5\\uBC14\\uAD6C\\uB2C8\\uC5D0 \\uB2F4\\uAE34 \\uC0C1\\uD488\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex w-fit mx-auto my-4\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"w-[100px] mx-1 px-3 py-2 rounded border border-neutral-300 bg-white\",onClick:()=>route(-1),children:/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-black\",children:\"\\uC774\\uC804\\uD654\\uBA74\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"w-[100px] mx-1 px-3 py-2 rounded bg-black\",onClick:()=>route(staticServerUri+\"/\"),children:/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-white\",children:\"\\uC1FC\\uD551\\uD558\\uAE30 \\uD648\"})})]})]}):/*#__PURE__*/_jsxs(\"div\",{children:[Array.isArray(cartItems)&&cartItems.map(item=>{return item.carts.every(option=>option.quantity===0)!==true&&/*#__PURE__*/_jsx(CartItem,{item:item,onChange:handleOnChangeCount// 개수 변경\n},item.id);}),/*#__PURE__*/_jsxs(\"div\",{className:\"h-fit border rounded bg-white mt-8 px-8 py-6\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-bold text-lg\",children:\"\\uC8FC\\uBB38 \\uC608\\uC0C1\\uAE08\\uC561\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"float-right text-lg font-semibold text-blue-500 pr-4\",children:[comma(totalPrice),\"\\uC6D0\"]})]}),/*#__PURE__*/_jsx(Button,{className:\"h-fit w-full border rounded bg-[#feeb00] mt-4 p-4 hover:bg-yellow-300\",onClick:()=>route(staticServerUri+\"/order\"),children:/*#__PURE__*/_jsxs(\"span\",{className:\"font-semibold text-lg\",children:[getTotalCartCountIncludeOptions(),\"\\uAC74 \\uC8FC\\uBB38\\uD558\\uAE30\"]})})]})]})});};export default CartList;","map":{"version":3,"names":["useEffect","useState","useCallback","useRef","CartItem","comma","Button","useNavigate","useMutation","Box","Container","updateCart","BsCart","jsx","_jsx","jsxs","_jsxs","staticServerUri","process","env","REACT_APP_PATH","CartList","_ref","data","isLoading","route","cartItems","setCartItems","totalPrice","setTotalPrice","isCartEmpty","setIsCartEmpty","updatePayload","mutate","mutationFn","getTotalCartCountIncludeOptions","count","forEach","item","carts","cart","quantity","getIsCartEmpty","every","product","option","_data$data","_data$data$response","_data$data2","_data$data2$response","response","products","undefined","handleOnChangeCount","optionId","price","prev","current","isExist","find","cartId","filter","onSuccess","map","id","onError","error","alert","message","className","children","onClick","Array","isArray","onChange"],"sources":["/Users/master/Desktop/coupon-project/kakaoshop-FE/src/components/molecules/CartList.jsx"],"sourcesContent":["import { useEffect, useState, useCallback, useRef } from \"react\";\nimport CartItem from \"../atoms/CartItem\";\nimport { comma } from \"../../utils/convert\";\nimport Button from \"../atoms/Button\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useMutation } from \"react-query\";\nimport Box from \"../atoms/Box\";\nimport Container from \"../atoms/Container\";\nimport { updateCart } from \"../../services/api/cart\";\nimport { BsCart } from \"react-icons/bs\";\n\nconst staticServerUri = process.env.REACT_APP_PATH || \"\";\n\nconst CartList = ({ data, isLoading }) => {\n  const route = useNavigate();\n  const [cartItems, setCartItems] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [isCartEmpty, setIsCartEmpty] = useState(false);\n\n  const updatePayload = useRef([]);\n\n  const { mutate } = useMutation({\n    mutationFn: updateCart,\n  });\n\n  const getTotalCartCountIncludeOptions = useCallback(() => {\n    let count = 0;\n    cartItems.forEach((item) => {\n      item.carts.forEach((cart) => {\n        count += cart.quantity; // 개별 옵션에 해당\n      });\n    });\n    return comma(count);\n  }, [cartItems]);\n\n  const getIsCartEmpty = useCallback(() => {\n    return cartItems.every((product) => {\n      return product.carts.every((option) => option.quantity === 0);\n    });\n  }, [cartItems]);\n\n  useEffect(() => {\n    if (data?.data?.response?.products !== undefined) {\n      setCartItems(data.data.response.products);\n    }\n    if (data?.data?.response?.totalPrice !== undefined) {\n      setTotalPrice(data.data.response.totalPrice);\n    }\n    setIsCartEmpty(getIsCartEmpty());\n  }, [data, getIsCartEmpty]);\n\n  useEffect(() => {\n    setIsCartEmpty(getIsCartEmpty());\n  }, [cartItems, getIsCartEmpty]);\n\n  /**\n   * 옵션의 수량 변경과 가격 변경을 관리\n   * @param {number} optionId : 옵션의 아이디\n   * @param {number} quantity : 옵션 수량\n   * @param {number} price : 옵션 가격\n   */\n  const handleOnChangeCount = (optionId, quantity, price) => {\n    const prev = updatePayload.current;\n    const isExist = prev.find((item) => item.cartId === optionId);\n    if (isExist) {\n      updatePayload.current = [\n        ...prev.filter((item) => item.cartId !== optionId),\n        { cartId: optionId, quantity },\n      ];\n    } else {\n      updatePayload.current = [...prev, { cartId: optionId, quantity }];\n    }\n\n    mutate(updatePayload.current, {\n      onSuccess: (data) => {\n        setTotalPrice((prev) => prev + price);\n\n        setCartItems((prev) =>\n          prev.map((item) => ({\n            ...item,\n            carts: item.carts.map((cart) => {\n              if (cart.id === optionId) {\n                return { ...cart, quantity };\n              }\n              return cart;\n            }),\n          }))\n        );\n      },\n      onError: (error) => {\n        alert(error.message);\n      },\n    });\n  };\n\n  return (\n    <main className=\"pt-2 pb-10 bg-[#F4F4F4] bg-opacity-70\">\n      <Container className=\"w-[870px] mx-auto\">\n        <Box className=\"h-12 border rounded bg-white text-center\">\n          <h1 className=\"font-semibold text-[15px] mt-3\">장바구니</h1>\n        </Box>\n        {isCartEmpty ? (\n          <div className=\"text-center pt-52 pb-80 mt-2 border rounded bg-white \">\n            <BsCart className=\"mx-auto my-4 text-5xl text-neutral-300\" />\n            <span className=\"text-xl\">장바구니에 담긴 상품이 없습니다.</span>\n            <div className=\"flex w-fit mx-auto my-4\">\n              <button\n                className=\"w-[100px] mx-1 px-3 py-2 rounded border border-neutral-300 bg-white\"\n                onClick={() => route(-1)}>\n                <span className=\"text-sm text-black\">이전화면</span>\n              </button>\n              <button\n                className=\"w-[100px] mx-1 px-3 py-2 rounded bg-black\"\n                onClick={() => route(staticServerUri + \"/\")}>\n                <span className=\"text-sm text-white\">쇼핑하기 홈</span>\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div>\n            {Array.isArray(cartItems) &&\n              cartItems.map((item) => {\n                return (\n                  item.carts.every((option) => option.quantity === 0) !==\n                    true && (\n                    <CartItem\n                      key={item.id}\n                      item={item}\n                      onChange={handleOnChangeCount} // 개수 변경\n                    />\n                  )\n                );\n              })}\n            <div className=\"h-fit border rounded bg-white mt-8 px-8 py-6\">\n              <span className=\"font-bold text-lg\">주문 예상금액</span>\n              <div className=\"float-right text-lg font-semibold text-blue-500 pr-4\">\n                {comma(totalPrice)}원\n              </div>\n            </div>\n            <Button\n              className=\"h-fit w-full border rounded bg-[#feeb00] mt-4 p-4 hover:bg-yellow-300\"\n              onClick={() => route(staticServerUri + \"/order\")}>\n              <span className=\"font-semibold text-lg\">\n                {getTotalCartCountIncludeOptions()}건 주문하기\n              </span>\n            </Button>\n          </div>\n        )}\n      </Container>\n    </main>\n  );\n};\n\nexport default CartList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}