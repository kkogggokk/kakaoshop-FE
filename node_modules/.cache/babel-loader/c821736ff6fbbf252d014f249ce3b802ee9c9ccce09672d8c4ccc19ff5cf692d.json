{"ast":null,"code":"import{useEffect}from\"react\";import{Outlet,useNavigate}from\"react-router-dom\";import GNB from\"../components/organisms/GNB\";import Footer from\"../components/atoms/Footer\";import{getUserCookie}from\"../services/cookie\";import{useDispatch,useSelector}from\"react-redux\";import{setUserInfo}from\"../store/slices/userSlice\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const staticServerUri=process.env.REACT_APP_PATH||\"\";const RequiredAuthLayout=()=>{const navigate=useNavigate();// 렌더링 될 때, 쿠키에 저장된 사용자 정보를 리덕스 스토어에 가져와서 저장\nconst dispatch=useDispatch();dispatch(setUserInfo(getUserCookie()));const userInfo=useSelector(state=>state.user);useEffect(()=>{if(!userInfo.token){alert(\"로그인이 필요한 서비스입니다.\");navigate(staticServerUri+\"/login\");}},[navigate,userInfo.token]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(GNB,{}),/*#__PURE__*/_jsx(\"div\",{className:\"h-20\"}),/*#__PURE__*/_jsx(Outlet,{}),/*#__PURE__*/_jsx(Footer,{})]});};export default RequiredAuthLayout;","map":{"version":3,"names":["useEffect","Outlet","useNavigate","GNB","Footer","getUserCookie","useDispatch","useSelector","setUserInfo","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","staticServerUri","process","env","REACT_APP_PATH","RequiredAuthLayout","navigate","dispatch","userInfo","state","user","token","alert","children","className"],"sources":["/Users/master/Desktop/coupon-project/kakaoshop-FE/src/layouts/RequiredAuthLayout.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\nimport GNB from \"../components/organisms/GNB\";\nimport Footer from \"../components/atoms/Footer\";\nimport { getUserCookie } from \"../services/cookie\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setUserInfo } from \"../store/slices/userSlice\";\n\nconst staticServerUri = process.env.REACT_APP_PATH || \"\";\n\nconst RequiredAuthLayout = () => {\n  const navigate = useNavigate();\n  // 렌더링 될 때, 쿠키에 저장된 사용자 정보를 리덕스 스토어에 가져와서 저장\n  const dispatch = useDispatch();\n  dispatch(setUserInfo(getUserCookie()));\n  const userInfo = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (!userInfo.token) {\n      alert(\"로그인이 필요한 서비스입니다.\");\n      navigate(staticServerUri + \"/login\");\n    }\n  }, [navigate, userInfo.token]);\n\n  return (\n    <>\n      <GNB />\n      <div className=\"h-20\" />\n      <Outlet />\n      <Footer />\n    </>\n  );\n};\nexport default RequiredAuthLayout;\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAASC,MAAM,CAAEC,WAAW,KAAQ,kBAAkB,CACtD,MAAO,CAAAC,GAAG,KAAM,6BAA6B,CAC7C,MAAO,CAAAC,MAAM,KAAM,4BAA4B,CAC/C,OAASC,aAAa,KAAQ,oBAAoB,CAClD,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,WAAW,KAAQ,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExD,KAAM,CAAAC,eAAe,CAAGC,OAAO,CAACC,GAAG,CAACC,cAAc,EAAI,EAAE,CAExD,KAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAC,QAAQ,CAAGlB,WAAW,CAAC,CAAC,CAC9B;AACA,KAAM,CAAAmB,QAAQ,CAAGf,WAAW,CAAC,CAAC,CAC9Be,QAAQ,CAACb,WAAW,CAACH,aAAa,CAAC,CAAC,CAAC,CAAC,CACtC,KAAM,CAAAiB,QAAQ,CAAGf,WAAW,CAAEgB,KAAK,EAAKA,KAAK,CAACC,IAAI,CAAC,CAEnDxB,SAAS,CAAC,IAAM,CACd,GAAI,CAACsB,QAAQ,CAACG,KAAK,CAAE,CACnBC,KAAK,CAAC,kBAAkB,CAAC,CACzBN,QAAQ,CAACL,eAAe,CAAG,QAAQ,CAAC,CACtC,CACF,CAAC,CAAE,CAACK,QAAQ,CAAEE,QAAQ,CAACG,KAAK,CAAC,CAAC,CAE9B,mBACEX,KAAA,CAAAF,SAAA,EAAAe,QAAA,eACEjB,IAAA,CAACP,GAAG,GAAE,CAAC,cACPO,IAAA,QAAKkB,SAAS,CAAC,MAAM,CAAE,CAAC,cACxBlB,IAAA,CAACT,MAAM,GAAE,CAAC,cACVS,IAAA,CAACN,MAAM,GAAE,CAAC,EACV,CAAC,CAEP,CAAC,CACD,cAAe,CAAAe,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}