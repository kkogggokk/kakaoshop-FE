{"version":3,"file":"static/js/449.152a0d8c.chunk.js","mappings":"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","sources":["components/atoms/CartItem.jsx","components/molecules/CartList.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport Box from \"./Box\";\nimport Counter from \"./Counter\";\nimport { useCallback } from \"react\";\nimport { comma } from \"../../utils/convert\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"./Button\";\nimport Photo from \"./Photo\";\n\nconst staticServerUri = process.env.REACT_APP_PATH || \"\";\n\n// 각 상품별 장바구니 항목\n// 여러 옵션이 저장될 수 있음\nconst CartItem = ({ item, onChange }) => {\n  const [amounts, setAmounts] = useState(\n    item.carts.map((cart) => ({\n      id: cart.id,\n      amount: cart.price,\n    }))\n  );\n  const [totalAmount, setTotalAmount] = useState(\n    item.carts.reduce((acc, cur) => {\n      return acc + cur.price;\n    }, 0)\n  );\n  const getOptionAmountById = useCallback(\n    (id) => {\n      const foundElement = amounts.find((element) => element.id === id);\n      return foundElement ? foundElement.amount : 0;\n    },\n    [amounts]\n  );\n  const setOptionAmountById = useCallback((id, addNum) => {\n    setAmounts((prev) => {\n      return prev.map((element) => {\n        if (element.id === id) {\n          return { ...element, amount: element.amount + addNum };\n        }\n        return element;\n      });\n    });\n    setTotalAmount((prev) => prev + addNum);\n  }, []);\n\n  return (\n    <Box className=\"border rounded bg-white px-10 py-6 my-2\">\n      <div className=\"flex items-center  mb-3\">\n        <Photo\n          className=\"w-20 h-20 rounded border border-neutral-200\"\n          src={`${process.env.REACT_APP_API_PATH}/images/${item.id}.jpg`}\n          // 아래는 크램폴린 배포 환경에서 이용한 src\n          // 크램폴린 배포 서버에서 api로 이미지를 제공해 주지않아 public 이미지를 이용하도록 수정\n          // src={`/images/${item.id}.jpg`}\n          alt={`${item.productName} image`}\n        />\n        <Link to={staticServerUri + `/product/${item.id}`}>\n          <h5 className=\"pl-3 font-semibold text-base tracking-tighter\">\n            {item.productName}\n          </h5>\n        </Link>\n      </div>\n\n      {item.carts.map((cart) => {\n        return (\n          // 개수가 0개인 옵션은 표시하지 않도록 한다.\n          cart.quantity !== 0 && (\n            <div\n              //옵션 아이디\n              key={cart.id}\n              className=\"border rounded bg-[#FDFDFD] p-6 my-2\"\n            >\n              <div className=\"mb-4\">\n                <span>{cart.option.optionName}</span>\n              </div>\n              <div className=\"flex items-center\">\n                {/* 삭제 버튼 구현 */}\n                <Button\n                  className=\"w-fit h-8 mr-3 bg-white border rounded border-neutral-200 \"\n                  onClick={() => {\n                    onChange(cart.id, 0, -cart.quantity * cart.option.price);\n                    setOptionAmountById(\n                      cart.id,\n                      -cart.quantity * cart.option.price\n                    );\n                  }}\n                >\n                  <span className=\"text-sm px-3\">삭제</span>\n                </Button>\n                <Counter\n                  value={cart.quantity}\n                  onIncrease={(count) => {\n                    // onChange(아이디, 변경된 수량, 해당 옵션 상품의 가격)\n                    onChange(cart.id, count, cart.option.price);\n                    setOptionAmountById(cart.id, cart.option.price);\n                  }}\n                  onDecrease={(count) => {\n                    onChange(cart.id, count, -cart.option.price);\n                    setOptionAmountById(cart.id, -cart.option.price);\n                  }}\n                />\n                <span className=\"ml-auto\">\n                  {comma(getOptionAmountById(cart.id))}원\n                </span>\n              </div>\n            </div>\n          )\n        );\n      })}\n      <div className=\"border rounded bg-[#FAFAFA] px-6 py-4 mt-6\">\n        <span className=\"font-semibold\">주문금액</span>\n        <span className=\"float-right font-semibold\">\n          {comma(totalAmount)}원\n        </span>\n      </div>\n    </Box>\n  );\n};\nexport default CartItem;\n","import { useEffect, useState, useCallback, useRef } from \"react\";\nimport CartItem from \"../atoms/CartItem\";\nimport { comma } from \"../../utils/convert\";\nimport Button from \"../atoms/Button\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useMutation } from \"react-query\";\nimport Box from \"../atoms/Box\";\nimport Container from \"../atoms/Container\";\nimport { updateCart } from \"../../services/api/cart\";\nimport { BsCart } from \"react-icons/bs\";\n\nconst staticServerUri = process.env.REACT_APP_PATH || \"\";\n\nconst CartList = ({ data, isLoading }) => {\n  const route = useNavigate();\n  const [cartItems, setCartItems] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [isCartEmpty, setIsCartEmpty] = useState(false);\n\n  const updatePayload = useRef([]);\n\n  const { mutate } = useMutation({\n    mutationFn: updateCart,\n  });\n\n  const getTotalCartCountIncludeOptions = useCallback(() => {\n    let count = 0;\n    cartItems.forEach((item) => {\n      item.carts.forEach((cart) => {\n        count += cart.quantity; // 개별 옵션에 해당\n      });\n    });\n    return comma(count);\n  }, [cartItems]);\n\n  const getIsCartEmpty = useCallback(() => {\n    return cartItems.every((product) => {\n      return product.carts.every((option) => option.quantity === 0);\n    });\n  }, [cartItems]);\n\n  useEffect(() => {\n    if (data?.data?.response?.products !== undefined) {\n      setCartItems(data.data.response.products);\n    }\n    if (data?.data?.response?.totalPrice !== undefined) {\n      setTotalPrice(data.data.response.totalPrice);\n    }\n    setIsCartEmpty(getIsCartEmpty());\n  }, [data, getIsCartEmpty]);\n\n  useEffect(() => {\n    setIsCartEmpty(getIsCartEmpty());\n  }, [cartItems, getIsCartEmpty]);\n\n  /**\n   * 옵션의 수량 변경과 가격 변경을 관리\n   * @param {number} optionId : 옵션의 아이디\n   * @param {number} quantity : 옵션 수량\n   * @param {number} price : 옵션 가격\n   */\n  const handleOnChangeCount = (optionId, quantity, price) => {\n    const prev = updatePayload.current;\n    const isExist = prev.find((item) => item.cartId === optionId);\n    if (isExist) {\n      updatePayload.current = [\n        ...prev.filter((item) => item.cartId !== optionId),\n        { cartId: optionId, quantity },\n      ];\n    } else {\n      updatePayload.current = [...prev, { cartId: optionId, quantity }];\n    }\n\n    mutate(updatePayload.current, {\n      onSuccess: (data) => {\n        setTotalPrice((prev) => prev + price);\n\n        setCartItems((prev) =>\n          prev.map((item) => ({\n            ...item,\n            carts: item.carts.map((cart) => {\n              if (cart.id === optionId) {\n                return { ...cart, quantity };\n              }\n              return cart;\n            }),\n          }))\n        );\n      },\n      onError: (error) => {\n        alert(error.message);\n      },\n    });\n  };\n\n  return (\n    <main className=\"pt-2 pb-10 bg-[#F4F4F4] bg-opacity-70\">\n      <Container className=\"w-[870px] mx-auto\">\n        <Box className=\"h-12 border rounded bg-white text-center\">\n          <h1 className=\"font-semibold text-[15px] mt-3\">장바구니</h1>\n        </Box>\n        {isCartEmpty ? (\n          <div className=\"text-center pt-52 pb-80 mt-2 border rounded bg-white \">\n            <BsCart className=\"mx-auto my-4 text-5xl text-neutral-300\" />\n            <span className=\"text-xl\">장바구니에 담긴 상품이 없습니다.</span>\n            <div className=\"flex w-fit mx-auto my-4\">\n              <button\n                className=\"w-[100px] mx-1 px-3 py-2 rounded border border-neutral-300 bg-white\"\n                onClick={() => route(-1)}>\n                <span className=\"text-sm text-black\">이전화면</span>\n              </button>\n              <button\n                className=\"w-[100px] mx-1 px-3 py-2 rounded bg-black\"\n                onClick={() => route(staticServerUri + \"/\")}>\n                <span className=\"text-sm text-white\">쇼핑하기 홈</span>\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div>\n            {Array.isArray(cartItems) &&\n              cartItems.map((item) => {\n                return (\n                  item.carts.every((option) => option.quantity === 0) !==\n                    true && (\n                    <CartItem\n                      key={item.id}\n                      item={item}\n                      onChange={handleOnChangeCount} // 개수 변경\n                    />\n                  )\n                );\n              })}\n            <div className=\"h-fit border rounded bg-white mt-8 px-8 py-6\">\n              <span className=\"font-bold text-lg\">주문 예상금액</span>\n              <div className=\"float-right text-lg font-semibold text-blue-500 pr-4\">\n                {comma(totalPrice)}원\n              </div>\n            </div>\n            <Button\n              className=\"h-fit w-full border rounded bg-[#feeb00] mt-4 p-4 hover:bg-yellow-300\"\n              onClick={() => route(staticServerUri + \"/order\")}>\n              <span className=\"font-semibold text-lg\">\n                {getTotalCartCountIncludeOptions()}건 주문하기\n              </span>\n            </Button>\n          </div>\n        )}\n      </Container>\n    </main>\n  );\n};\n\nexport default CartList;\n"],"names":["staticServerUri","process","REACT_APP_PATH","_ref","item","onChange","amounts","setAmounts","useState","carts","map","cart","id","amount","price","totalAmount","setTotalAmount","reduce","acc","cur","getOptionAmountById","useCallback","foundElement","find","element","setOptionAmountById","addNum","prev","_jsxs","Box","className","children","_jsx","Photo","src","alt","productName","Link","to","quantity","option","optionName","Button","onClick","Counter","value","onIncrease","count","onDecrease","comma","data","isLoading","route","useNavigate","cartItems","setCartItems","totalPrice","setTotalPrice","isCartEmpty","setIsCartEmpty","updatePayload","useRef","mutate","useMutation","mutationFn","updateCart","getTotalCartCountIncludeOptions","forEach","getIsCartEmpty","every","product","useEffect","_data$data","_data$data$response","_data$data2","_data$data2$response","undefined","response","products","handleOnChangeCount","optionId","current","isExist","cartId","filter","onSuccess","onError","error","alert","message","Container","BsCart","Array","isArray","CartItem"],"sourceRoot":""}