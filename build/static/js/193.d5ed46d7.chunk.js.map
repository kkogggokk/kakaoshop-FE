{"version":3,"file":"static/js/193.d5ed46d7.chunk.js","mappings":"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","sources":["components/templates/OrderTemplate.jsx"],"sourcesContent":["import { useMutation } from \"react-query\";\nimport { comma } from \"../../utils/convert\";\nimport { order } from \"../../services/api/order\";\nimport { useRef, useState } from \"react\";\nimport logOut from \"../../services/logout\";\nimport { BsTruck, BsFillQuestionSquareFill } from \"react-icons/bs\";\nimport ErrorTypo from \"../atoms/ErrorTypo\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst staticServerUri = process.env.REACT_APP_PATH || \"\";\n\nconst OrderTemplate = ({ data }) => {\n  const products = data?.data?.response?.products;\n  const totalPrice = data?.data?.response?.totalPrice;\n  const navigate = useNavigate();\n\n  const [agreePayment, setAgreePayment] = useState(false);\n  const [agreePolicy, setAgreePolicy] = useState(false);\n\n  const allAgreeRef = useRef(null);\n  const agreePaymentRef = useRef(null);\n  const agreePolicyRef = useRef(null);\n\n  const handleAllAgree = (e) => {\n    const value = e.target.checked;\n    setAgreePayment(value);\n    setAgreePolicy(value);\n  };\n\n  const handleAgreement = (e) => {\n    const { name, checked } = e.target;\n    if (name === \"payment-agree\") {\n      setAgreePayment(checked);\n    } else if (name === \"policy-agree\") {\n      setAgreePolicy(checked);\n    }\n  };\n\n  const { mutate } = useMutation({\n    mutationFn: order,\n  });\n\n  const OrderItems = () => {\n    return products?.map((item) => {\n      // 해당 상품의 모든 옵션의 상품 수량이 0이라면 표현하지 않는다\n      if (!item?.carts.every((option) => option.quantity === 0)) {\n        return (\n          <div key={item.id} className=\"border rounded bg-white p-4 my-2\">\n            {item.carts.map((option) => {\n              // 수량이 0인 옵션은 표현하지 않는다\n              if (option.quantity !== 0) {\n                return (\n                  <div className=\"flex items-center gap-3 py-2\" key={option.id}>\n                    <img\n                      className=\"w-[80px] h-[80px] border rounded-lg\"\n                      src={`${process.env.REACT_APP_API_PATH}/images/${item.id}.jpg`}\n                      // 크램폴린 배포 서버에서 이미지를 제공해 주지않아 public 이미지를 이용하도록 수정\n                      // src={`${staticServerUri}/images/${item.id}.jpg`} // 크램폴린 배포용 src\n                      alt=\"\"\n                    />\n                    <div className=\"product-info\">\n                      <div className=\"product-name-option-quantity\">\n                        <p className=\"font-semibold\">{item.productName}</p>\n                        <span className=\"text-sm\">\n                          [옵션] {option.option.optionName},{\" \"}\n                        </span>\n                        <span>{option.quantity}개</span>\n                      </div>\n                      <div className=\"price\">\n                        <p className=\"text-[17px] font-bold\">\n                          {comma(option.price)}원\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                );\n              }\n              return null; // Ensure a value is returned\n            })}\n            <hr />\n            <div className=\"pt-4 text-center text-blue-500\">\n              <BsTruck className=\"inline text-2xl\" />\n              <span className=\"px-1 font-bold\">무료배송</span>\n            </div>\n          </div>\n        );\n      }\n      return null; // Ensure a value is returned\n    });\n  };\n\n  if (!!!products) return <ErrorTypo />;\n\n  return (\n    <div className=\"pt-[15px] pb-[50px] bg-[#F4F4F4] bg-opacity-70\">\n      <div className=\"block mx-auto max-w-[870px] w-full \">\n        <div className=\"border rounded py-4 text-center bg-white\">\n          <h1 className=\"text-xl font-bold\">주문하기</h1>\n        </div>\n        {products.length === 0 ? (\n          <div className=\"ship-info-not-found border rounded my-2 bg-white\">\n            <div className=\"h-[600px] min-h-fit flex flex-col items-center justify-center\">\n              <BsFillQuestionSquareFill className=\"text-8xl text-neutral-400\" />\n              <p className=\"mt-10 mb-6 text-2xl text-neutral-600\">\n                주문할 상품이 존재하지 않습니다.\n              </p>\n              <div className=\"flex w-fit mx-auto my-4\">\n                <button\n                  className=\"w-[100px] mx-2 px-3 py-2 rounded border border-neutral-300 bg-white\"\n                  onClick={() => navigate(-1)}>\n                  <span className=\"text-sm text-black\">이전화면</span>\n                </button>\n                <button\n                  className=\"w-[100px] mx-2 px-3 py-2 rounded bg-black\"\n                  onClick={() => navigate(staticServerUri + \"/\")}>\n                  <span className=\"text-sm text-white\">쇼핑하기 홈</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div className=\"ship-info border rounded my-2 bg-white\">\n              <div className=\"p-4 pb-3\">\n                <h1 className=\"text-xl font-bold\">배송지 정보</h1>\n              </div>\n              <div className=\"user-ship-info flex flex-col gap-2 px-4 pb-4\">\n                <div className=\"\">\n                  <h1 className=\"flex items-center gap-2 text-lg font-bold\">\n                    홍길동\n                    <span className=\"text-blue-400 bg-blue-100 rounded text-xs p-1\">\n                      기본 배송지\n                    </span>\n                  </h1>\n                </div>\n                <div className=\"text-[15px]\">\n                  <span>010-0000-0000</span>\n                </div>\n                <div className=\"text-[14px]\">\n                  <span>서울특별시 도곡동 000-00</span>\n                </div>\n                <textarea\n                  className=\"border rounded h-16 p-3\"\n                  placeholder=\"배송시 요청사항을 입력해주세요 (최대 50자)\"\n                />\n              </div>\n            </div>\n            {/* 각 주문의 정보 */}\n            <div className=\"border rounded p-4 bg-white\">\n              <span className=\"text-lg font-bold\">주문상품 정보 </span>\n              {/* <span className=\"font\">(총 `${}`개)</span> */}\n            </div>\n            <OrderItems />\n            {/* 총 주문 금액 */}\n            <div className=\"flex items-center justify-between border p-4 bg-white\">\n              <span className=\"text-xl font-bold\">총 주문 금액</span>\n              <span className=\"price text-xl font-bold\">\n                {comma(totalPrice)}원\n              </span>\n            </div>\n            {/* 전체 동의, 구매조건 확인 및 결제 진행 동의 */}\n            <div className=\"flex flex-col gap-4 border rounded my-2 p-4 bg-white\">\n              <div className=\"flex items-center gap-2\">\n                <input\n                  className=\"h-5 w-5\"\n                  type=\"checkbox\"\n                  id=\"all-agree\"\n                  ref={allAgreeRef}\n                  checked={agreePayment && agreePolicy}\n                  onChange={handleAllAgree}\n                />\n                <label htmlFor=\"all-agree\" className=\"text-lg font-bold\">\n                  전체 동의\n                </label>\n              </div>\n              <hr />\n              <div className=\"flex items-center gap-2\">\n                <input\n                  className=\"h-5 w-5\"\n                  type=\"checkbox\"\n                  id=\"agree\"\n                  ref={agreePaymentRef}\n                  checked={agreePayment}\n                  name=\"payment-agree\"\n                  onChange={handleAgreement}\n                />\n                <label htmlFor=\"agree\" className=\"text-base \">\n                  구매조건 확인 및 결제 진행 동의\n                </label>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <input\n                  className=\"h-5 w-5\"\n                  type=\"checkbox\"\n                  id=\"policy\"\n                  ref={agreePolicyRef}\n                  checked={agreePolicy}\n                  name=\"policy-agree\"\n                  onChange={handleAgreement}\n                />\n                <label htmlFor=\"policy\" className=\"text-base\">\n                  개인정보 제 3자 동의\n                </label>\n              </div>\n            </div>\n            <div className=\"border rounded my-2 p-4 bg-slate-50\">\n              <span className=\"text-base font-bold\">법적고지 </span>\n              <p className=\"text-sm text-neutral-500\">\n                (주)카카오에서 판매하는 상품 중에는 개별 판매자가 판매하는\n                상품이 포함되어 있습니다. 개별 판매자가 판매하는 상품에 대해\n                (주)카카오는 통신중개 판매업자로서 통신판매의 당사자가 아니며\n                상품의 주문, 배송 및 환불 등과 관련한 의무와 책임은 각\n                판매자에게 있습니다.\n              </p>\n            </div>\n            {/* 결제하기 버튼 */}\n            <button\n              className={`border rounded w-full my-4 p-4 font-medium ${\n                agreePayment && agreePolicy\n                  ? \"bg-[#feeb00] hover:bg-yellow-300\"\n                  : \"bg-neutral-300 text-neutral-500\"\n              }`}\n              onClick={() => {\n                if (agreePayment === false || agreePolicy === false) {\n                  alert(\"모든 항목에 동의가 필요합니다.\");\n                  return;\n                }\n                // POST: /orders/save\n                // DB: 장바구니에 있는 모든 항목이 결제로 저장\n                // 장바구니는 비워짐\n                // 페이지 이동 -> 주문완료 페이지(리턴 받은 주문 아이디)\n                // /orders/complete/:id\n                mutate(null, {\n                  onError: (e) => {\n                    alert(\n                      \"주문에 실패했습니다. 재로그인 후 다시 시도해 주십시오.\"\n                    );\n                    logOut().then(() => {\n                      navigate(\"/login\");\n                    });\n\n                    // 사용자 정보가 유실(header의 autorization)시\n                    // /login 페이지로 이동\n                    // 엉뚱한 상품 데이터가 들어왔을 경우 404 페이지\n                  },\n                  onSuccess: (res) => {\n                    const id = res.data.response.id;\n                    alert(\"주문이 완료되었습니다.\");\n                    navigate(staticServerUri + `/order/complete/${id}`);\n                  },\n                });\n              }}>\n              <span className=\"font-bold text-xl\">\n                {comma(totalPrice)}원 결제하기\n              </span>\n            </button>\n          </div>\n        )}\n        <hr />\n      </div>\n    </div>\n  );\n};\n\nexport default OrderTemplate;\n"],"names":["staticServerUri","process","REACT_APP_PATH","_ref","_data$data","_data$data$response","_data$data2","_data$data2$response","data","products","response","totalPrice","navigate","useNavigate","agreePayment","setAgreePayment","useState","agreePolicy","setAgreePolicy","allAgreeRef","useRef","agreePaymentRef","agreePolicyRef","handleAgreement","e","name","checked","target","mutate","useMutation","mutationFn","order","OrderItems","map","item","carts","every","option","quantity","_jsxs","className","children","_jsx","src","id","alt","productName","optionName","comma","price","BsTruck","length","BsFillQuestionSquareFill","onClick","placeholder","type","ref","onChange","value","htmlFor","onError","alert","logOut","then","onSuccess","res","ErrorTypo"],"sourceRoot":""}